"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[135],{9535:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(5893),i=t(1151);const r={title:"Data processing"},a=void 0,o={id:"data",title:"Data processing",description:"Data processing",source:"@site/docs/data.md",sourceDirName:".",slug:"/data",permalink:"/data",draft:!1,unlisted:!1,editUrl:"https://github.com/Plastic-Scanner/documentation/tree/main/docs/data.md",tags:[],version:"current",frontMatter:{title:"Data processing"}},c={},l=[{value:"Data processing",id:"data-processing",level:2},{value:"Pre-processing",id:"pre-processing",level:3},{value:"interpretation",id:"interpretation",level:3}];function d(e){const n={br:"br",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",...(0,i.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"data-processing",children:"Data processing"}),"\n",(0,s.jsx)(n.h3,{id:"pre-processing",children:"Pre-processing"}),"\n",(0,s.jsx)(n.p,{children:"The data from the board is just a number, it is the ADC value, which on itself is dimentionless. it is possible to convert this into volts, but it does not help much here."}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"General idea to get from InGaAs sensor to determined plastic type"}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Take a pre measurement (with sample placed but no LED on) ",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Take a set of measurements (turn on one LED, wait 10ms, measure,turn off the LED, repeat for the rest) ",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Take a post measurement (with sample placed but no LED on) ",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Repeat steps 1-3 multiple times, this allows you to take out backgorund noise/light, if the measurements are too different it might be that the sample moved.",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The measurements can then be compensated for the output power of the LEDs",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The measurements can then be compensated for the sensitivity of the InGaAs photodiode",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The measurements can be scaled relative to maximum possible measurement (a full reflection of IR light (reference material))",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Normalize the values based on the reference material between 0 and 1",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["apply SNV transformation to overlay all readings",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use as input for a machine learning model",(0,s.jsx)("br",{})]}),"\n"]}),"\n"]})}),(0,s.jsx)("br",{})]})]}),"\n",(0,s.jsx)(n.h3,{id:"interpretation",children:"interpretation"}),"\n",(0,s.jsxs)(n.p,{children:["Question: What is the current quality of the data coming out of the Plastic Scanner, and how can we improve this",(0,s.jsx)(n.br,{}),"\n","Question: How can we write an identification model?",(0,s.jsx)(n.br,{}),"\n","Question: Which LEDs are critical, which are nice to have, which are redundant?"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(7294);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);