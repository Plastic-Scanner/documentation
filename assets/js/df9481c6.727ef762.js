"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[981],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),d=n,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return a?r.createElement(h,o(o({ref:t},u),{},{components:a})):r.createElement(h,o({ref:t},u))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8960:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={title:"Software usage"},o="PSplot",l={unversionedId:"boards/DB2.x_software",id:"boards/DB2.x_software",title:"Software usage",description:"Up to date source of the firmware can be found here",source:"@site/docs/boards/DB2.x_software.md",sourceDirName:"boards",slug:"/boards/DB2.x_software",permalink:"/boards/DB2.x_software",draft:!1,editUrl:"https://github.com/Plastic-Scanner/documentation/tree/main/docs/boards/DB2.x_software.md",tags:[],version:"current",lastUpdatedAt:1684147373,formattedLastUpdatedAt:"May 15, 2023",frontMatter:{title:"Software usage"},sidebar:"docsSidebar",previous:{title:"Firmware installation",permalink:"/boards/DB2.x_firmware"},next:{title:"Revision history",permalink:"/revision_history"}},s={},p=[{value:"Preperation",id:"preperation",level:2},{value:"Interface",id:"interface",level:2},{value:"Data in/out",id:"data-inout",level:3},{value:"Measuring",id:"measuring",level:3},{value:"Data visualisation",id:"data-visualisation",level:3},{value:"Contributing",id:"contributing",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"psplot"},"PSplot"),(0,n.kt)("p",null,"Up to date source of the firmware can be found ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Plastic-Scanner/PSplot/"},"here")),(0,n.kt)("h2",{id:"preperation"},"Preperation"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Make sure that you have Python 3.10 installed"),(0,n.kt)("li",{parentName:"ol"},"Download the latest software ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Plastic-Scanner/PSplot"},"here")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"pip install pipenv")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"pipenv install")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"pipenv shell")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"python psplot.py"))),(0,n.kt)("h2",{id:"interface"},"Interface"),(0,n.kt)("p",null,"The interface is divided up in 3 sections:"),(0,n.kt)("h3",{id:"data-inout"},"Data in/out"),(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{alt:"",src:"/img/psplot/datainout.png",width:"400px"})),"Here you can select your developement board, if no COM port is available/selected it will use dummy data (to help the developers!) You can also import or export data to load previous dataset or to export your data once you are done.",(0,n.kt)("h3",{id:"measuring"},"Measuring"),(0,n.kt)("p",null,"In this section you can:  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"calibrate with reference material  "),(0,n.kt)("li",{parentName:"ul"},"fill in details about (un)known sample  "),(0,n.kt)("li",{parentName:"ul"},"take a measurement  ",(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{alt:"",src:"/img/psplot/measuring.png",width:"400px"})))),(0,n.kt)("h3",{id:"data-visualisation"},"Data visualisation"),(0,n.kt)("p",null,"The last section shows the visualisation of the measurement. It has four sections"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"2D spectrum graph, this shows the measurement from the sample, with the reference measurement as an ideal straight line and with the SNV applied. It shows the last 3 measurements"),(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{alt:"",src:"/img/psplot/spectra.png",width:"400px"}))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},'3D scatter plot, this shows a 3D plot with the previous measurements. The colors are based on the "Sample Material" input. It defaults to the axis that we think are the most interesting, but with the drop down menus you can play around to see what works for you.'),(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{alt:"",src:"/img/psplot/3Dscatter.png",width:"400px"}))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},"WARNING: this is a first experiment! It is a bar chart, that shows what the computer thinks is the most likely type of plastic, this is at the moment only an experiment for HDPE, PET, PP and PS  ")))),(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{alt:"",src:"/img/psplot/barchart.png",width:"400px"})),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Table with the raw measurement values. In this table you can also edit the material of a measurement after taking the measurement by editing one of cells.",(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{alt:"",src:"/img/psplot/rawreadings.png",width:"400px"})))),(0,n.kt)("h2",{id:"contributing"},"Contributing"),(0,n.kt)("p",null,"Feel free to improve, modify and contribute to this project. You can find the lastest open source code here ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Plastic-Scanner/PSplot/"},"Github Repo"),"."))}m.isMDXComponent=!0}}]);